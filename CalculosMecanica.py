# -*- coding: utf-8 -*-
"""CalculosMecanica.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hg8NfwVA8L9uVl_HX6gi4QNNBl0H54jU
"""

import pandas as pd
import numpy as np

from numpy import mean
from numpy import std

tabela = pd.read_excel("/content/drive/MyDrive/Colab Notebooks/PlanilhaMec.xlsx") #aqui irá ler os dados em Excel
display(tabela) #vamos imprimir a tabela de um jeito mais bonito

print()

print('---------------- Calculos da Média ------------------------------')

print("Media do Comprimento(cm): ", str(round(mean(tabela['C']),2)))
print("Media do Largura(cm): ", str(round(mean(tabela['L']),2)))
print("Media da Área(cm²): ", str(round(mean(tabela['Área']),2)))

print()

print('---------------- Calculos do Desvio Padrão Amostral -----------------')

print("Desvio Padrão da Comprimento(cm): ", str(round(std(tabela['C']),2)))
print("Desvio Padrão da Largura(cm): ", str(round(std(tabela['L']),2)))
print("Desvio Padrão da Área(cm²): ", str(round(std(tabela['Área']),2)))

print()

print('---------------- Calculos Erro da Média -----------------')

Raiz_das_medidas = 5


Dp_Comprimento = np.std(tabela["C"])
Erro_Media_Comprimento = Dp_Comprimento / Raiz_das_medidas
print("Erro médio do Comprimento(cm): ", round(Erro_Media_Comprimento,2))

Dp_Largura = np.std(tabela["L"])
Erro_Media_Largura = Dp_Largura / Raiz_das_medidas
print("Erro médio da Largura(cm): ", round(Erro_Media_Largura,2))


Dp_Area = np.std(tabela["Área"])
Erro_Media_Área = Dp_Area / Raiz_das_medidas
print("Erro médio da Área (cm²): ",round(Erro_Media_Área,2))

print()

print('-------- Calculos Erro Padrão Largura e Comprimento --------')

Erro_do_instrumento = 0.1

Erro_total_comprimento = np.sqrt((Erro_do_instrumento)**2 + (Dp_Comprimento)**2)
print("Erro Padrão Comprimento: ",round(Erro_total_comprimento,2))

Erro_total_largura = np.sqrt(((Erro_do_instrumento)**2 + (Dp_Largura)**2))
print("Erro Padrão Largura: ", round(Erro_total_largura,2))

"""# Histogramas que precisamos:

*   Histograma da Largura (cm)
*   Histograma do Comprimento (cm)
*   Histograma da Área (cm²)


"""

import matplotlib.pyplot as plt
tabela = pd.read_excel("/content/drive/MyDrive/Colab Notebooks/PlanilhaMec.xlsx") #aqui irá ler os dados em Excel

# Criando o histograma para os dados da largura, com o int
plt.hist(tabela['L'], bins= 3, edgecolor="black")

# Colocando o título no histograma
plt.title("Histograma Largura (cm)")

#Podemos criar um legenda no gráfico para apontar a média
média = 74.9
cor = "#FA8072"
plt.axvline(média, color=cor, label="Média_Largura: 74,9")
plt.legend()

plt.grid()

# Colocando legenda nos Eixos
plt.xlabel("Largura (cm)")
plt.ylabel("Frequência dos dados")

plt.tight_layout()
#plotando o gráfico
plt.show()

import matplotlib.pyplot as plt

tabela = pd.read_excel("/content/drive/MyDrive/Colab Notebooks/PlanilhaMec.xlsx") #aqui irá ler os dados em Excel
# Criando o histograma para os dados da Área
plt.hist(tabela['Área'],bins=3, edgecolor="black")

# Colocando o título no histograma
plt.title("Histograma Area (cm²)")

#Podemos criar um legenda no gráfico para apontar a média
média = 11203.23
cor = "#FA8072"
plt.axvline(média, color=cor, label="Média_Área: 11203.23")
plt.legend()

plt.grid()

# Colocando legenda nos Eixos
plt.xlabel("Área (cm²)")
plt.ylabel("Frequência dos dados")

plt.tight_layout()
 

plt.show()

import matplotlib.pyplot as plt

tabela = pd.read_excel("/content/drive/MyDrive/Colab Notebooks/PlanilhaMec.xlsx") #aqui irá ler os dados em Excel
# Criando o histograma para os dados da Área
plt.hist(tabela['C'],bins=2, edgecolor="black")

# Colocando o título no histograma
plt.title("Histograma Comprimento(cm)")

#Podemos criar um legenda no gráfico para apontar a média
média =  149.5
cor = "#FA8072"
plt.axvline(média, color=cor, label="Média_Comprimento:  149.5") 
plt.legend()

plt.grid()

# Colocando legenda nos Eixos
plt.xlabel("Comprimento(cm)")
plt.ylabel("Frequência dos dados")

plt.tight_layout()
 

plt.show()

"""# Calculando a correlação entre dos dados do comprimento e largura.

**Para isso iremos utilizar a covariancia entre x e y e coeficiente de Pearson (r). Depois iremos criar o gráfico de dispersão para visualizar como as grandezas de correlacionam graficamente.**

"""

import pandas as pd
import numpy as np


print("Calculando a covariancia entre comprimento e largura")
Covariancia = np.cov(tabela["C"], tabela["L"])[1][0]

print()

print("Covariancia entre Comprimento e Largura:", Covariancia)

print()

print("Calculando o Coeficiente de Pearson")

print()

r = Covariancia/(Dp_Comprimento*Dp_Largura)

print("Coeficiente de Pearson (r) =", r)

"""**Podemos ver que tanto a covariancia, quanto o coeficente de Pearson deram valores negativos, logo as grandezas de comprimento e largura não são correlacionadas entre si, na verdade são inversamente correlacionadas. 
Quando uma cresce, outra cai e vice-versa. Podemos avaliar isso pelo gráfica de dispersão abaixo.**
"""

import pandas as pd
import matplotlib.pyplot as plt

tabela = pd.read_excel("/content/drive/MyDrive/Colab Notebooks/PlanilhaMec.xlsx")#aqui irá ler os dados em Excel

plt.scatter(tabela["C"],tabela["L"],) #Aqui posso criar um gráfico de dispersão com os eixos x e y
plt.xlabel("Comprimento(cm)") #Colocando legendas no eixo x que é o comprimento neste caso
plt.ylabel("Largura(cm)") #Colocando legendas no eixo y que é a largura neste caso

plt.grid()

plt.show()

import pandas as pd
import matplotlib.pyplot as plt

tabela = pd.read_excel("/content/drive/MyDrive/Colab Notebooks/PlanilhaMec.xlsx")#aqui irá ler os dados em Excel

plt.scatter(tabela["L"],tabela["C"],) #Aqui posso criar um gráfico de dispersão com os eixos x e y
plt.xlabel("Largura(cm)") #Colocando legendas no eixo x que é o comprimento neste caso
plt.ylabel("Comprimento(cm)") #Colocando legendas no eixo y que é a largura neste caso

plt.grid()

plt.show()

# Calculando as medias de C, L e A
Media_C = np.mean(tabela["C"])
print(Media_C)

Media_L = np.mean(tabela["L"])
print(Media_L)

A_Media = Media_C * Media_L

print(A_Media)

#Calculando a propagação de erros
Propagação = A_Media * np.sqrt((Erro_Media_Comprimento/Media_C)**2 + (Erro_Media_Largura/Media_L)**2)
print(Propagação)